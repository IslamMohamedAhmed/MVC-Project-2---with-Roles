@model IEnumerable<DepartmentViewModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_layout.cshtml";
}


@if(TempData["CreateDepartment"] is not null)
{
    <div class="alert alert-success MessageDiv">@TempData["CreateDepartment"]</div>
}
@if (TempData["EditDepartment"] is not null)
{
    <div class="alert alert-warning MessageDiv">@TempData["EditDepartment"]</div>
}
@if (TempData["DeleteDepartment"] is not null)
{
    <div class="alert alert-danger MessageDiv">@TempData["DeleteDepartment"]</div>
}

<div  class="d-flex align-items-center">
    <h1 class="my-5">All Departments</h1>
    <a asp-action="Create" style="border-radius:50%;" class="btn btn-outline-success ms-3"><i class="fa-solid fa-plus"></i></a>
</div>
<form asp-action="Index" class="row w-75 mx-auto my-5">
    <input placeholder="Search Departments" class="col-10" type="text" name="Name" />
    <input class="btn btnStyl btn-outline-info col-2" type="submit" value="Search" />
</form>
@if (Model.Any())
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <td>
                    @Html.DisplayNameFor(d => d.Code)
                </td>
                <td>
                    @Html.DisplayNameFor(d => d.Name)
                </td>
                <td>
                    @Html.DisplayNameFor(d => d.DateOfCreation)
                </td>
                <td>
                    Details
                </td>
                <td>
                    Edit
                </td>
                <td>
                    Remove
                </td>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Code</td>
                <td>@item.Name</td>
                <td>@item.DateOfCreation</td>
               <partial name="ButtonsPartialView" model="@item.Id.ToString()"></partial>
            </tr>

        }
    </table>
}
else
{
    <div class="alert alert-warning p-5 my-5">No Available Departments at the moment</div>
}


